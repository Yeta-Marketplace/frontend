{"openapi": "3.0.2", "info": {"title": "yeta", "version": "0.1.0"}, "paths": {"/v1/login/access-token": {"post": {"tags": ["login"], "summary": "Login Access Token", "description": "OAuth2 compatible token login, get an access token for future requests", "operationId": "login_access_token", "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/Body_login-login_access_token"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Token"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/login/test-token": {"post": {"tags": ["login"], "summary": "Test Token", "description": "Test access token", "operationId": "test_token", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRead"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/v1/password-recovery/{email}": {"post": {"tags": ["login"], "summary": "Recover Password", "description": "Password Recovery", "operationId": "recover_password", "parameters": [{"required": true, "schema": {"title": "Email", "type": "string", "format": "email"}, "name": "email", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Msg"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/reset-password/": {"post": {"tags": ["login"], "summary": "Reset Password", "description": "Reset password", "operationId": "reset_password", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_login-reset_password"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Msg"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/users/": {"get": {"tags": ["users"], "summary": "Read Users", "description": "Retrieve users.", "operationId": "read_users", "parameters": [{"required": false, "schema": {"title": "Skip", "type": "integer", "default": 0}, "name": "skip", "in": "query"}, {"required": false, "schema": {"title": "Limit", "type": "integer", "default": 100}, "name": "limit", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"title": "Response Users-Read Users", "type": "array", "items": {"$ref": "#/components/schemas/UserRead"}}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}, "post": {"tags": ["users"], "summary": "Create User", "description": "Create new user.", "operationId": "create_user", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCreate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/v1/users/me": {"get": {"tags": ["users"], "summary": "Read User Me", "description": "Get current user.", "operationId": "read_user_me", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRead"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}, "put": {"tags": ["users"], "summary": "Update User Me", "description": "Update own user.", "operationId": "update_user_me", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_users-update_user_me"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/v1/users/open": {"post": {"tags": ["users"], "summary": "Create User Open", "description": "Create new user without the need to be logged in.", "operationId": "create_user_open", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_users-create_user_open"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/users/{user_id}": {"get": {"tags": ["users"], "summary": "Read User By Id", "description": "Get a specific user by id.", "operationId": "read_user_by_id", "parameters": [{"required": true, "schema": {"title": "User Id", "type": "integer"}, "name": "user_id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}, "put": {"tags": ["users"], "summary": "Update User", "description": "Update a user.", "operationId": "update_user", "parameters": [{"required": true, "schema": {"title": "User Id", "type": "integer"}, "name": "user_id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserUpdate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/v1/events/": {"get": {"tags": ["events"], "summary": "Read Events", "description": "Retrieve events.", "operationId": "read_events", "parameters": [{"required": false, "schema": {"title": "Distance", "type": "number", "default": 25}, "name": "distance", "in": "query"}, {"required": false, "schema": {"title": "Skip", "type": "integer", "default": 0}, "name": "skip", "in": "query"}, {"required": false, "schema": {"title": "Limit", "type": "integer", "default": 100}, "name": "limit", "in": "query"}, {"required": true, "schema": {"title": "Latitude", "maximum": 90.0, "minimum": -90.0, "type": "number"}, "name": "latitude", "in": "query"}, {"required": true, "schema": {"title": "Longitude", "maximum": 180.0, "minimum": -180.0, "type": "number"}, "name": "longitude", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"title": "Response Events-Read Events", "type": "array", "items": {"$ref": "#/components/schemas/EventRead"}}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["events"], "summary": "Create Event", "description": "Create new event.", "operationId": "create_event", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/EventCreate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EventRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/v1/events/categories/": {"get": {"tags": ["events"], "summary": "Read Event Types", "description": "Retrieve event categories.", "operationId": "read_event_types", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"title": "Response Events-Read Event Types", "type": "array", "items": {"$ref": "#/components/schemas/EventTypeRead"}}}}}}}}, "/v1/feedback/": {"post": {"tags": ["feedback"], "summary": "Submit Feedback", "description": "Submit feedback/bug report.", "operationId": "submit_feedback", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/FeedbackCreate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FeedbackRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}}, "components": {"schemas": {"Body_login-login_access_token": {"title": "Body_login-login_access_token", "required": ["username", "password"], "type": "object", "properties": {"grant_type": {"title": "Grant Type", "pattern": "password", "type": "string"}, "username": {"title": "Username", "type": "string"}, "password": {"title": "Password", "type": "string"}, "scope": {"title": "Scope", "type": "string", "default": ""}, "client_id": {"title": "Client Id", "type": "string"}, "client_secret": {"title": "Client Secret", "type": "string"}}}, "Body_login-reset_password": {"title": "Body_login-reset_password", "required": ["token", "new_password"], "type": "object", "properties": {"token": {"title": "Token", "type": "string"}, "new_password": {"title": "New Password", "type": "string"}}}, "Body_users-create_user_open": {"title": "Body_users-create_user_open", "required": ["password", "email"], "type": "object", "properties": {"password": {"title": "Password", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}, "full_name": {"title": "Full Name", "type": "string"}}}, "Body_users-update_user_me": {"title": "Body_users-update_user_me", "type": "object", "properties": {"password": {"title": "Password", "type": "string"}, "full_name": {"title": "Full Name", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}}}, "EventCreate": {"title": "EventCreate", "required": ["latitude", "longitude", "start_date", "end_date"], "type": "object", "properties": {"description": {"title": "Description", "type": "string"}, "latitude": {"title": "Latitude", "maximum": 90.0, "minimum": -90.0, "type": "number"}, "longitude": {"title": "Longitude", "maximum": 180.0, "minimum": -180.0, "type": "number"}, "start_date": {"title": "Start Date", "type": "string", "format": "date"}, "end_date": {"title": "End Date", "type": "string", "format": "date"}}}, "EventRead": {"title": "EventRead", "required": ["latitude", "longitude", "start_date", "end_date", "id"], "type": "object", "properties": {"description": {"title": "Description", "type": "string"}, "latitude": {"title": "Latitude", "maximum": 90.0, "minimum": -90.0, "type": "number"}, "longitude": {"title": "Longitude", "maximum": 180.0, "minimum": -180.0, "type": "number"}, "start_date": {"title": "Start Date", "type": "string", "format": "date"}, "end_date": {"title": "End Date", "type": "string", "format": "date"}, "id": {"title": "Id", "type": "integer"}}}, "EventTypeRead": {"title": "EventTypeRead", "required": ["name", "display_name", "id"], "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "display_name": {"title": "Display Name", "type": "string"}, "is_active": {"title": "Is Active", "type": "boolean", "default": true}, "id": {"title": "Id", "type": "integer"}}}, "FeedbackCreate": {"title": "FeedbackCreate", "required": ["description"], "type": "object", "properties": {"description": {"title": "Description", "type": "string"}}}, "FeedbackRead": {"title": "FeedbackRead", "required": ["description", "id"], "type": "object", "properties": {"description": {"title": "Description", "type": "string"}, "id": {"title": "Id", "type": "integer"}}}, "HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "Msg": {"title": "Msg", "required": ["msg"], "type": "object", "properties": {"msg": {"title": "Msg", "type": "string"}}}, "Token": {"title": "Token", "required": ["access_token", "token_type"], "type": "object", "properties": {"access_token": {"title": "Access Token", "type": "string"}, "token_type": {"title": "Token Type", "type": "string"}}}, "UserCreate": {"title": "UserCreate", "required": ["email", "password"], "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email"}, "full_name": {"title": "Full Name", "type": "string"}, "is_active": {"title": "Is Active", "type": "boolean", "default": true}, "password": {"title": "Password", "type": "string"}}}, "UserRead": {"title": "UserRead", "required": ["email", "id"], "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email"}, "full_name": {"title": "Full Name", "type": "string"}, "is_active": {"title": "Is Active", "type": "boolean", "default": true}, "id": {"title": "Id", "type": "integer"}}}, "UserUpdate": {"title": "UserUpdate", "type": "object", "properties": {"full_name": {"title": "Full Name", "type": "string"}, "password": {"title": "Password", "type": "string"}, "is_active": {"title": "Is Active", "type": "boolean"}}}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}, "securitySchemes": {"OAuth2PasswordBearer": {"type": "oauth2", "flows": {"password": {"scopes": {}, "tokenUrl": "/v1/login/access-token"}}}}}}